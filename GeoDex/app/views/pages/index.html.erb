<div id="map"></div>
  <div id="geodex">
    <header id="geodexHeader">
      <h1>Cycling Routes</h1>
      
      <div id="addData">
        <button  value="addData">
          <a href="#"><i class="icon-fixed-width icon-plus"></i></a> 
        </button>
      </div>
      Search: <input ng-model="query">
    </header>
    <div id="contentContainer" ng-controller="AccordionDemoCtrl">
  	<ul class="auth-list">
  	    <li><%= link_to "Facebook", user_omniauth_authorize_path(:facebook), :class => 'button auth-facebook' %></li>
  	    <li><%= link_to "Google", user_omniauth_authorize_path(:google_oauth2), :class => 'button auth-google' %></li>
  	    <li><%= link_to "Github", user_omniauth_authorize_path(:github), :class => 'button auth-github' %></li>
    </ul>
      <accordion close-others="oneAtATime">
        <accordion-group heading="{{group.title}}" ng-repeat="group in groups | filter:query" ng-click="onContentHeaderClick()">
        {{group.content}}
      </accordion-group>
    </accordion>
  </div>
  <footer id="actionBar">
    <div id="social-nav" class="">
      <ul>
        <li><a href="#"><i class="icon-fixed-width icon-facebook"></i></a></li>
        <li><a href="#"><i class="icon-fixed-width icon-twitter"></i></a></li>
        <li><a href="#"><i class="icon-fixed-width icon-google-plus"></i></a></li>
      </ul>
    </div>
   <!-- <button class="btn" ng-click="goToFB()">Facebook</button>
   <button class="btn" ng-click="goToTwit()">Twitter</button>
   <button class="btn" ng-click="goToGooglePlus()">G +</button> -->
 </footer>
</div>
<script>
'use strict';

// JS for leaflet 
$(function(){
	// Declare app level module which depends on filters, and services
	angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives', 'myApp.controllers', 'ui.bootstrap']);

	// JS for Angular
	function AccordionDemoCtrl($scope) {
		$scope.oneAtATime = true;

		$scope.groups = [
		{
			title: "That one In the North",
			content: "Lorem ipsum poopem sapsam"

		}];

		$scope.addItem = function() {
			var newItemNo = $scope.items.length + 1;
			$scope.items.push('Item ' + newItemNo);
		};
	}
	
	var map = L.map('map').setView([22.25018, 114.18571], 13);

	var cloudmade = L.tileLayer('http://{s}.tile.cloudmade.com/{key}/{styleID}/256/{z}/{x}/{y}.png', {
		attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
		minZoom: 11,
		key: 'BC9A493B41014CAABB98F0471D759707',
		styleID: 96219, 
		reuseTiles: true
		}).addTo(map);	

	function onContentHeaderClick() {
	};

	function onEachFeature(feature, layer) {
	    // does this feature have a property named popupContent?
	    if (feature.properties && feature.properties.popupContent) {
	        layer.bindPopup(feature.properties.popupContent);
	    }
	}

	function geodexInit(feat) {
		L.geoJson(feat, {
		    onEachFeature: onEachFeature
		}).addTo(map);
	}

});

</script>